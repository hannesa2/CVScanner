name: Release

on:
  push:
    tags:
      - '*'

jobs:
  build:
    name: Publish aar
    runs-on: macOS-latest
    strategy:
      matrix:
        java_version: [ 11 ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2.4.0
        with:
          fetch-depth: 0
      - name: Show tags
        run: git tag -n
      - name: Install JDK ${{ matrix.java_version }}
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: ${{ matrix.java_version }}
      - name: Install Android SDK
        uses: malinskiy/action-android/install-sdk@release/0.1.2
      - name: Build project
        run: ./gradlew clean assembleRelease
        env:
          TAG_VERSION: ${{ github.ref }}
      - name: Search for aar file
        run: echo "AAR_RELASE_FILE=$(find . -name *release.aar | head -n 1)" >> $GITHUB_ENV
      - name: Search for AAR release name
        run: echo "AAR_RELASE_NAME=$(find . -name *release.aar | head -n 1 | xargs basename)" >> $GITHUB_ENV
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUBTOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ${{ env.AAR_RELASE_FILE }}
          asset_name: ${{ env.AAR_RELASE_NAME }}
          asset_content_type: application/zip
